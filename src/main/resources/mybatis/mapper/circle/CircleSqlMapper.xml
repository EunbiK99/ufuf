<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cu.ufuf.circle.mapper.CircleSqlMapper">

    <insert id="circleInfoInsert">
        INSERT into circle(circle_small_category_id, circle_grade_id, user_id, circle_name, circle_university, circle_content,circle_image) values(
            #{circle_small_category_id}, 1, #{user_id}, #{circle_name}, #{circle_university}, #{circle_content}, #{circle_image}
        )
    </insert>

    <select id="circlemiddlecategoryInfoAll" resultType="com.cu.ufuf.dto.CircleMiddleCategoryDto">
        SELECT * from circle_middle_category
    </select>

    <select id="circlesmallcategoryInfoAll" resultType="com.cu.ufuf.dto.CircleSmallCategoryDto">
        SELECT * from circle_small_category
    </select>
    <select id="circlesmallcategoryInfoByMiddleId" resultType="com.cu.ufuf.dto.CircleSmallCategoryDto">
        SELECT * from circle_small_category where circle_middle_category_id = #{circle_middle_category_id}
    </select>
    <insert id="circleNoticeImageInfoInsert">
        INSERT INTO circle_notice_image(circle_id,circle_notice_image) values(
	        #{circle_id}, #{circle_notice_image}
        )
    </insert>
    <select id="circleIdMaxByUserId" resultType="int">
        SELECT max(circle_id) from circle where user_id = #{user_id}
    </select>
    <insert id="cirlceMemberinfoInsert">
        insert into circle_member(circle_id, user_id, circle_position) values(
            #{circle_id}, #{user_id}, #{circle_position}
        )
    </insert>
    <select id="circleInfoHotThree" resultType="com.cu.ufuf.dto.CircleDto">
        SELECT *
        FROM circle c
        WHERE c.circle_id IN (
            SELECT c.circle_id
            FROM circle c
            INNER JOIN circle_member cm ON c.circle_id = cm.circle_id
            GROUP BY c.circle_id
            ORDER BY COUNT(*) DESC 
        )
        limit 3
    </select>
    <select id="circleNewListOrderByCircleId" resultType="com.cu.ufuf.dto.CircleDto">
        SELECT * from circle order by circle_id desc
    </select>
    <select id="circlesmallCategoryListBysmallCategoryId" resultType="com.cu.ufuf.dto.CircleSmallCategoryDto">
        select * from circle_small_category where circle_small_category_id = #{circle_small_category_id}
    </select>
    <select id="circleGradeInfoByGradeId" resultType="com.cu.ufuf.dto.CircleGradeDto">
        select * from circle_grade where circle_grade_id = #{circle_grade_id}
    </select>
    <select id="circleMemberCountInfo" resultType="int">
        SELECT count(*) from circle_member where circle_id = #{circle_id}
    </select>
    <select id="circleInfoByCircleId" resultType="com.cu.ufuf.dto.CircleDto">
        select * from circle where circle_id = #{circle_id}
    </select>
    <select id="circleNoticeImageInfoByCircleId" resultType="com.cu.ufuf.dto.CircleNoticeImageDto">
        select * from circle_notice_image where circle_id = #{circle_id}
    </select>
    <select id="circlemiddleCategoryInfoByMiddleCategoryId" resultType="com.cu.ufuf.dto.CircleMiddleCategoryDto">
        select * from circle_middle_category where circle_middle_category_id = #{circle_middle_category_id}
    </select>
    <insert id="circleJoinApplyInsert">
        INSERT into circle_join_apply(circle_id, user_id, join_submit) values(
            #{circle_id}, #{user_id}, #{join_submit}
        )
    </insert>
    <select id="circleMemberInfoByUserId" resultType="com.cu.ufuf.dto.CircleMemberDto">
        select * from circle_member where user_id = #{user_id}
    </select>
    <select id="circleMemberInfoByCircleId" resultType="com.cu.ufuf.dto.CircleMemberDto">
        select * from circle_member where circle_id = #{circle_id}
    </select>
    <select id="circleboardInfoByCircleMemberId" resultType="com.cu.ufuf.dto.CircleBoardDto">
        select * from circle_board where circle_member_id = #{circle_member_id} order by circle_board_id desc
    </select>
    <select id="userInfoByUserId" resultType="com.cu.ufuf.dto.UserInfoDto">
        select * from user_info where user_id = #{user_id}
    </select>
    <select id="circleMemberInfoByUserIdAndCircleId" resultType="com.cu.ufuf.dto.CircleMemberDto">
        select * from circle_member where user_id = #{user_id} and circle_id = #{circle_id}
    </select>

    <insert id="circleboardDtoInsert">
        insert into circle_board(circle_member_id, board_title, board_content, main_image, board_cnt) values(
            #{circle_member_id}, #{board_title}, #{board_content}, #{main_image}, #{board_cnt}
        )
    </insert>
    <select id="boardIdMaxByCircleMemberId" resultType="int">
        select max(circle_board_id) from circle_board where circle_member_id = #{circle_member_id}
    </select>
    <insert id="circleboardImageDtoInsert">
        insert into circle_board_image(circle_board_id, sub_image) values(
            #{circle_board_id}, #{sub_image}
        )
    </insert>
    <insert id="circleVoteInsert">
        insert into circle_vote(vote_end_time ,circle_member_id, vote_title, vote_theme) values(
            #{vote_end_time} ,#{circle_member_id}, #{vote_title}, #{vote_theme}
        )
    </insert>
    <insert id="circleVoteOptionInsert">
        insert into circle_vote_option(circle_vote_id, option_content, option_image) values(
            #{circle_vote_id}, #{option_content}, #{option_image}
        )
    </insert>
    <select id="circleVoteMaxCircleVoteId" resultType="int">
        SELECT max(circle_vote_id) from circle_vote WHERE circle_member_id = #{circle_member_id}
    </select>
    <select id="circleVoteBoardListByCircleMemberId" resultType="com.cu.ufuf.dto.CircleVoteDto">
        select * from circle_vote where circle_member_id = #{circle_member_id} order by circle_vote_id desc
    </select>
    <select id="circleVoteOptionInfoByCircleVoteId" resultType="com.cu.ufuf.dto.CircleVoteOptionDto">
        select * from circle_vote_option where circle_vote_id = #{circle_vote_id}
    </select>
    <select id="circleVoteCompleteInfoByVoteOptionId" resultType="com.cu.ufuf.dto.CircleVoteCompleteDto">
        select * from circle_vote_complete where vote_option_id = #{vote_option_id}
    </select>
    <select id="circleVoteCompleteCntByVoteOptionId" resultType="int">
        select count(*) from circle_vote_complete where vote_option_id = #{vote_option_id}
    </select>
    <select id="circleVoteInfoByCircleVoteId" resultType="com.cu.ufuf.dto.CircleVoteDto">
        select * from circle_vote where circle_vote_id = #{circle_vote_id}
    </select>
    <insert id="circleVoteCompleteInfoInsert">
        insert into circle_vote_complete(vote_option_id, circle_member_id) values(
            #{vote_option_id}, #{circle_member_id}
        )
    </insert>
    <insert id="circleScheduleInfoInsert">
        insert into circle_schedule(circle_member_id, schedule_title, schedule_content, schedule_address, participation, schedule_fee, start_time, end_time) values(
            #{circle_member_id}, #{schedule_title}, #{schedule_content}, #{schedule_address}, #{participation}, #{schedule_fee}, #{start_time}, #{end_time}
        )
    </insert>
    <insert id="circleScheduleApplicationInfoInsert">
        insert into circle_schedule_application(circle_schedule_id, circle_member_id) values(
            #{circle_schedule_id}, #{circle_member_id}
        )
    </insert>
    <insert id="circleScheduleAttenDanceInfoInfoInsert">
        INSERT into circle_schedule_attendance(circle_schedule_application_id, attendance) values(
            #{circle_schedule_application_id}, #{attendance}
        )
    </insert>
    <select id="circleScheduleListAllByCircleMemberId" resultType="com.cu.ufuf.dto.CircleScheduleDto">
        SELECT * from circle_schedule WHERE circle_member_id = #{circle_member_id}
    </select>
    <select id="voteChecked" resultType="java.lang.Boolean">
        select EXISTS(SELECT * from circle_vote_complete 
        WHERE vote_option_id = #{vote_option_id} 
        AND circle_member_id = #{circle_member_id}) as boo 
        from dual
    </select>
    <select id="scheduleApplyCheckPAndAByCircleMemberId" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT * from circle_member 
        where circle_position IN ('P', 'A') 
        AND circle_member_id = #{circle_member_id}) as A 
        from dual
    </select>
    <select id="scheduleApplyCheckByCircleScheduleIdAndCircleMemberId" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT * from circle_schedule_application 
        WHERE circle_schedule_id = #{circle_schedule_id} 
        and circle_member_id = #{circle_member_id}) as A 
        from dual
    </select>
    <select id="circleBoartCnt" resultType="int">
        SELECT count(*) from circle_board 
        where circle_member_id 
        IN (SELECT circle_member_id  from circle_member where circle_id = #{circle_id})
    </select>
    <select id="ApprovalJoinAllListByCircleIdAndSubmitN" resultType="com.cu.ufuf.dto.CircleJoinApplyDto">
        select * from circle_join_apply where circle_id = #{circle_id} and join_submit = 'N'
    </select>
    <update id="circleJoinApplyCompleteUpdateByCircleJoinApplyId">
        UPDATE circle_join_apply set join_submit = 'Y' where circle_join_apply_id = #{circle_join_apply_id}
    </update>
    <select id="verificationjoinApplyByUserIdAndCircleId" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT * from circle_member WHERE user_id = #{user_id} and circle_id = #{circle_id}) as A from dual
    </select>
    <select id="circleBoardImageInfoByCircleBoardId" resultType="com.cu.ufuf.dto.CircleBoardImageDto">
        SELECT * from circle_board_image WHERE circle_board_id = #{circle_board_id}
    </select>
    <select id="circleScheduleIdMaxValue" resultType="int">
        SELECT MAX(circle_schedule_id) from circle_schedule
    </select>
    <insert id="itemInfoInsert">
        INSERT into item_info(item_category_id, merchan_id) values(
            2, #{merchan_id}
        )
    </insert>
    <insert id="kakaoPaymentReqInsert">
        INSERT into kakao_payment_req(cid, partner_user_id, partner_order_id, item_code, item_name, quantity, total_amount, tax_free_amount) values(
                'TC0ONETIME', #{partner_user_id}, #{partner_order_id}, #{item_code}, #{item_name}, #{quantity}, #{total_amount}, #{tax_free_amount}
        )
    </insert>
    <insert id="orderInfoInsert">
        INSERT into order_info(order_id, item_id, user_id, status) values(
            #{order_id}, #{item_id}, #{user_id}, #{status}
        )
    </insert>
    <select id="itemPkGetByCircleScheduleId" resultType="int">
        select item_id from item_info where merchan_id = #{circle_schedule_id} and item_category_id = 2
    </select>
    <select id="userPkByCircleScheduleId" resultType="int">
        SELECT user_id from circle_member where circle_member_id = (SELECT circle_member_id  from circle_schedule WHERE circle_schedule_id = #{circle_schedule_id})
    </select>
    <select id="orderIdMax" resultType="java.lang.String">
        SELECT MAX(order_id) from order_info
    </select>
    <insert id="kakaoPaymentResInsert">
        INSERT into kakao_payment_res(tid, next_redirect_mobile_url, created_at) values(
            #{tid}, #{next_redirect_mobile_url}, #{created_at}
        )
    </insert>
    <insert id="kakaoPaymentAcceptReqInsert">
        INSERT into kakao_payment_accept_req(cid, tid, partner_order_id, partner_user_id, pg_token) values(
            #{cid}, #{tid}, #{partner_order_id}, #{partner_user_id}, #{pg_token}
        )
    </insert>
    <insert id="kakaoPaymentAcceptResInsert">
        insert into kakao_payment_accept_res(tid, amount, card_info, partner_order_id, partner_user_id, aid, payment_method_type, approved_at) values(
            #{tid}, #{amount}, #{card_info}, #{partner_order_id}, #{partner_user_id}, #{aid}, #{payment_method_type}, #{approved_at}
        )
    </insert>
    <insert id="amountInfoInsert">
        INSERT into amount(total, `point`) values(
            #{total}, #{point}
        )
    </insert>
    <insert id="cardInfoInsert">
        INSERT into card_info(bin_, card_type, install_month, approved_id) values(
            #{bin_}, #{card_type}, #{install_month}, #{approved_id}
        )
    </insert>
    <select id="cardIdMax" resultType="int">
        select max(card_id) from card_info
    </select>
    <select id="amountIdMax" resultType="int">
        select max(amount_id) from amount
    </select>
    <update id="orderInfoStatusByOrderId">
        UPDATE order_info set status='결제완료' where order_id = #{order_id}
    </update>
    <select id="circleListByCircleSmallcategory" resultType="com.cu.ufuf.dto.CircleDto">
        SELECT * from circle WHERE circle_small_category_id = #{circle_small_category_id}
    </select>
    <select id="circleMemberListMemberCntOrderByCircleId" resultType="com.cu.ufuf.dto.CircleMemberDto">
        SELECT t1.circle_member_id, t1.circle_id, t1.user_id, t1.circle_position, t1.created_at 
        from (SELECT *,COUNT(*) from circle_member group by circle_id order by count(*) desc)t1
    </select>
    <select id="circleInfoListOrderByGradeId" resultType="com.cu.ufuf.dto.CircleDto">
        SELECT c.circle_id, c.circle_small_category_id, c.circle_grade_id, c.user_id, c.circle_name, c.circle_university, c.circle_content, c.circle_image, c.application_date  
        from circle_grade cg inner join circle c ON cg.circle_grade_id = c.circle_grade_id
        order by circle_grade_id desc
    </select>
    <insert id="circleLikeInfoInsert">
        INSERT into circle_like(circle_id, user_id) values(
            #{circle_id}, #{user_id}
        )
    </insert>
    <select id="circleLikeInfoCheck" resultType="int">
        SELECT count(*) from circle_like where circle_id = #{circle_id} and user_id = #{user_id}
    </select>
    <delete id="circleLikeInfoDelete">
        delete from circle_like where circle_id = #{circle_id} and user_id = #{user_id}
    </delete>
    <select id="circleLikeInfoByUserId" resultType="com.cu.ufuf.dto.CircleLikeDto">
        select * from circle_like where user_id = #{user_id}
    </select>
    <select id="circleScheduleByCircleScheduleId" resultType="com.cu.ufuf.dto.CircleScheduleDto">
        select * from circle_schedule where circle_schedule_id = #{circle_schedule_id}
    </select>
    <select id="circleScheduleApplicationByCircleScheduleId" resultType="int">
        select count(*) from circle_schedule_application where circle_schedule_id = #{circle_schedule_id}
    </select>
    <select id="circleScheduleApplyByUserId" resultType="com.cu.ufuf.dto.CircleScheduleApplyDto">
        SELECT * from circle_schedule_application WHERE circle_member_id in (SELECT circle_member_id from circle_member WHERE user_id = #{user_id})
    </select>
    <select id="itemInfoByCircleScheduleId" resultType="com.cu.ufuf.dto.ItemInfoDto">
        select * from item_info where merchan_id = #{circle_schedule_id} and item_category_id = 2
    </select>
    <select id="orderInfoByItemId" resultType="com.cu.ufuf.dto.OrderInfoDto">
        select * from order_info where item_id = #{item_id}
    </select>
    <select id="kakaoPaymentReqInfoByItemId" resultType="com.cu.ufuf.dto.KakaoPaymentReqDto">
        select * from kakao_payment_req where partner_order_id = #{order_id}
    </select>
    <select id="kakaoPaymentAccResInfoByItemId" resultType="com.cu.ufuf.dto.KakaoPaymentAcceptResDto">
        select * from kakao_payment_accept_res where partner_order_id = #{order_id}
    </select>
    <select id="circleScheduleInfoByCircleScheduleid" resultType="com.cu.ufuf.dto.CircleScheduleDto">
        select * from circle_schedule where circle_schedule_id = #{circle_schedule_id}
    </select>
    <select id="circleScheduleApplyPeopleCount" resultType="int">
        SELECT count(*) from circle_schedule_application WHERE circle_schedule_id = #{circle_schedule_id}
    </select>
    <insert id="kakakPaymentCancleReqInsert">
        INSERT into kakao_payment_cancel_req(cid,tid,cancel_amount,cancel_tax_free_amount) values(
            #{cid},#{tid},#{cancel_amount},#{cancel_tax_free_amount}
        )
    </insert>
    <insert id="kakakPaymentCancleResInsert">
        INSERT into kakao_payment_cancel_res(partner_order_id,partner_user_id,tid,payment_method_type,approved_cancel_amount,canceled_at,aid) values(
            #{partner_order_id},#{partner_user_id},#{tid},#{payment_method_type},#{approved_cancel_amount},#{canceled_at},#{aid}
        )
    </insert>
    <update id="paymentCancelStatusChangeOrderInfoStatus">
        UPDATE order_info SET status = '환불완료' WHERE order_id = #{order_id}
    </update>
    <delete id="scheduleApplicationTableDelete">
        DELETE from circle_schedule_application WHERE circle_schedule_application_id = #{circle_schedule_application_id}
    </delete>
    <select id="voteThreeNewList" resultType="com.cu.ufuf.dto.CircleVoteDto">
        SELECT * from circle_vote order by circle_vote_id desc limit 3
    </select>
    <select id="circleIdGetByCircleVoteId" resultType="int">
        SELECT circle_id  from circle_member 
        WHERE circle_member_id = (SELECT circle_member_id  from circle_vote where circle_vote_id = #{circle_vote_id})
    </select>
    <select id="circleScheduleApplicationMaxIdByCircleMemId" resultType="int">
        SELECT max(circle_schedule_application_id) from circle_schedule_application WHERE circle_member_id = #{circle_member_id}
    </select>
    <select id="circleScheduleApplicationPeopleCntByCircleScheduleId" resultType="int">
        SELECT count(*) from circle_schedule_application WHERE circle_schedule_id = #{circle_schedule_id}
    </select>
    <select id="circleScheduleApplicationListOrderByDesc" resultType="com.cu.ufuf.dto.CircleScheduleApplyDto">
        SELECT * from circle_schedule_application 
        WHERE circle_schedule_id = #{circle_schedule_id} 
        order by circle_schedule_application_id desc
    </select>
    <select id="circleScheduleAttendanceInfoByCircleScheduleApplicationId" resultType="com.cu.ufuf.dto.CircleScheduleAttendanceDto">
        SELECT * from circle_schedule_attendance 
        WHERE circle_schedule_application_id = #{circle_schedule_application_id}
    </select>
    <update id="circleAttendanceChangeY">
        update circle_schedule_attendance set attendance = 'Y' where circle_schedule_application_id = #{circle_schedule_application_id}
    </update>
    <select id="circleMemberInfoByCircleMemberId" resultType="com.cu.ufuf.dto.CircleMemberDto">
        select * from circle_member where circle_member_id = #{circle_member_id}
    </select>
    <update id="circleAttendanceChangeN">
        update circle_schedule_attendance set attendance = 'N' where circle_schedule_application_id = #{circle_schedule_application_id}
    </update>
    <insert id="circleBoardLikeInsert">
        INSERT into circle_board_like(circle_board_id,circle_member_id) values(
            #{circle_board_id},#{circle_member_id}
        )
    </insert>
    <delete id="circleBoardLikeDelete">
        DELETE from circle_board_like 
        WHERE circle_board_id = #{circle_board_id} and circle_member_id = #{circle_member_id}
    </delete>
    <select id="circleBoardLikeCheck" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT * from circle_board_like 
        WHERE circle_board_id = #{circle_board_id} AND circle_member_id = #{circle_member_id}) as boo from dual
    </select>
    <select id="circleVoteTotalCount" resultType="int">
        SELECT count(*) from circle_vote_complete 
        WHERE vote_option_id 
        IN (SELECT vote_option_id from circle_vote_option WHERE  circle_vote_id = #{circle_vote_id})
    </select>
    <select id="circleVoteCompleteCount" resultType="int">
        SELECT count(*) from circle_vote_complete WHERE vote_option_id = #{vote_option_id}
    </select>
    <select id="circlejoinApplyPossibleCheck" resultType="int">
        SELECT count(*) from circle_join_apply WHERE circle_id = #{circle_id} and user_id = #{user_id}
    </select>
    <select id="boardCntByUserId" resultType="int">
        SELECT COUNT(*) from circle_board WHERE circle_member_id in (SELECT circle_member_id  from circle_member WHERE user_id = #{user_id})
    </select>
    <select id="voteCntByUserId" resultType="int">
        SELECT COUNT(*) from circle_vote WHERE circle_member_id in (SELECT circle_member_id  from circle_member WHERE user_id = #{user_id})
    </select>
    <select id="scheduleCntByUserId" resultType="int">
        SELECT COUNT(*) from circle_schedule where circle_member_id in (SELECT circle_member_id  from circle_member WHERE user_id = #{user_id})
    </select>
    
    


</mapper>