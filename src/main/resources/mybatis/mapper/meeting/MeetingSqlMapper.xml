<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cu.ufuf.meeting.mapper.MeetingSqlMapper">

<!-- * 미팅프로필 테이블 현재 PK 조회-->
<select id="countProfilePk" resultType="int">
    SELECT count(profileid) from meeting_profile
</select>

<!-- * 개인SNS URL 주소 중복 여부 확인-->
<select id="countSNSUrlByInputUrlValue" resultType="int">
    SELECT count(*) from meeting_sns 
    where snsURL like #{value}
</select>

<!-- * 미팅프로필 인서트 쿼리-->
<insert id="insertMeetingProfile">
    insert into meeting_profile(profileid, user_id, profileNickname, profileImg, profileComment)
    values(
        #{profileid},
        #{user_id},
        #{profileNickname},
        #{profileImg},
        #{profileComment}
    )
</insert>

<!-- * 개인SNS 인서트 쿼리-->
<insert id="insertNewSNS">
    insert into meeting_sns(profileid, snsURL) 
    values(
        #{profileid},
        #{snsURL}
    )
</insert>

<!-- * 미팅 프로필 존재 여부 확인 쿼리-->
<select id="countMeetingProfileByUserId" resultType="int">
    SELECT count(*) from meeting_profile mp 
    where user_id = #{user_id}
</select>

<!-- * 미팅 프로필 셀렉트 쿼리-->
<select id="selectMeetingProfileByUserId" resultType="com.cu.ufuf.dto.MeetingProfileDto">
    SELECT * from meeting_profile mp 
    where user_id = #{user_id}
</select>

<!-- * 미팅 모집글 테이블 PK 생성-->
<select id="countGroupPk" resultType="int">
    SELECT count(groupId) from meeting_group
</select>

<!-- * 미팅 모집글 인서트 쿼리-->
<insert id="insertNewGroup">
    INSERT into 
meeting_group(
	groupId,
	profileId,
	groupTitle,
	groupContent,
    groupImage,
	groupHeadCount,
	groupMeetingDate,
	groupApplyStart,
	groupApplyEnd,
	groupApplyCharge,
	groupMeetingPlace,
	groupGenderOption
	)
values (
	#{groupId},
	#{profileId},
	#{groupTitle},
	#{groupContent},
    #{groupImage},
	#{groupHeadCount},
	#{groupMeetingDate},
	#{groupApplyStart},
	#{groupApplyEnd},
	#{groupApplyCharge},
	#{groupMeetingPlace},
	#{groupGenderOption}
)
</insert>

<!-- * 지역 대분류 PK 생성-->
<select id="countFirstLocationCategoryForPk" resultType="int">
    SELECT count(firstLocationCategoryId) from meeting_firstLocationCategory
</select>

<!-- * 지역 중분류 PK 생성-->
<select id="countSecondLocationCategoryForPk" resultType="int">
    SELECT count(secondLocationCategoryId) from meeting_secondLocationCategory
</select>

<!-- * 지역 대분류 카테고리 인서트-->
<insert id="insertFirstLocationCategory">
    insert into meeting_firstLocationCategory(firstLocationCategoryId, firstLocationCategoryName) values(
        #{firstLocationCategoryId},
        #{firstLocationCategoryName}
    )
</insert>

<!-- * 지역 중분류 카테고리 인서트-->
<insert id="insertSecondLocationCategory">
    insert into meeting_secondLocationCategory (secondLocationCategoryId, secondLocationCategoryName) values(
        #{secondLocationCategoryId},
        #{secondLocationCategoryName}
    )
</insert>

<!-- * 모집글 : 지역 대분류 카테고리 인서트-->
<insert id="insertGroupFirstLocationCategory">
    INSERT into meeting_group_firstLocationCategory(groupId, firstLocationCategoryId) values(
        #{groupId},
        #{firstLocationCategoryId}
    )
</insert>

<!-- * 모집글 : 지역 중분류 카테고리 인서트-->
<insert id="insertGroupSecondLocationCategory">
    INSERT into meeting_group_secondLocationCategory(groupId, secondLocationCategoryId) values(
        #{groupId},
        #{secondLocationCategoryId}
    )
</insert>

<!-- * 미팅 태그 PK 생성-->
<select id="countTagForPk" resultType="int">
    SELECT count(tagId) from meeting_tag
</select>

<!-- * 미팅 태그 인서트-->
<insert id="insertTag">
    insert into meeting_tag(tagId, tagName) values(
        #{tagId},
        #{tagName}
    )
</insert>

<!-- * 모집글 : 미팅태그 인서트-->
<insert id="insertGroupTag">
    insert into meeting_group_tag(groupId, tagId) values(
        #{groupId},
        #{tagId}
    )
</insert>

<!-- * 미팅 모집글 리스팅-->
<select id="selectGroupListAll" resultType="com.cu.ufuf.dto.MeetingGroupDto">
    SELECT * from meeting_group
    order by groupId desc
</select>

<!-- * 그룹PK 기준 모집글 상세 셀렉트-->
<select id="selectGroupByGroupId" resultType="com.cu.ufuf.dto.MeetingGroupDto">
    SELECT * from meeting_group mg
    where groupid = #{groupId}
</select>

<!-- * 그룹PK 기준 모집글 태그 셀렉트-->
<select id="selectGroupTagListByGroupId" resultType="com.cu.ufuf.dto.MeetingGroupTagDto">
    SELECT * from meeting_group_tag mgt
    where groupId = #{groupId}
</select>

<!-- * 프로필PK 기준 미팅프로필 셀렉트-->
<select id="selectMeetingProfileByProfileId" resultType="com.cu.ufuf.dto.MeetingProfileDto">
    SELECT * from meeting_profile mp 
    where profileid = #{profileId}
</select>

<!-- * 태그PK 기준 태그데이터 셀렉트-->
<select id="selectTagByTagId" resultType="com.cu.ufuf.dto.MeetingTagDto">
    SELECT * from meeting_tag mt 
    where tagid = #{tagId}
</select>

<!-- * 미팅 신청자 인서트-->
<insert id="insertMeetingApplyUser">
    insert into meeting_applyUser(
        groupId,
        profileId,
        applyComment	
    )
    values(
        #{groupId},
        #{profileId},
        #{applyComment}
    )
</insert>

<!-- * 미팅 신청자 신청내역 존재여부 확인-->
<select id="countMeetingApplyUserByProfileId" resultType="int">
    SELECT COUNT(*) from meeting_applyUser
    where 1=1
    and profileId = #{profileId}
    and groupId = #{groupId}
</select>

<!-- * 모집글에 신청한 유저 미팅프로필 리스트 셀렉트-->
<select id="selectGroupApplyUserList" resultType="com.cu.ufuf.dto.MeetingApplyUserDto">
    SELECT * from meeting_applyUser 
    where 1=1    
    and groupId = #{groupId}
</select>

<!-- * 유저PK기준 모집중인 미팅 리스트 셀렉트-->
<select id="selectMeetingGroupListByProfilePk" resultType="com.cu.ufuf.dto.MeetingGroupDto">
    SELECT * from meeting_group mg
    where profileId = #{profileId}
</select>

<!-- * 미팅 확정멤버 인서트-->
<insert id="insertMeetingGroupMember">
    insert into meeting_groupMember(groupId, profileId) values(
        #{groupId},
        #{profileId}
    )
</insert>

<!-- * 모집글PK 기준 해당 모집글 확정멤버 셀렉트-->
<select id="selectMeetingGroupMemberListByGroupPk" resultType="com.cu.ufuf.dto.MeetingGroupMemberDto">
    SELECT * from meeting_groupMember mgm 
    where groupId = #{groupId}
</select>

<!-- * 모집글 확정 멤버 리스트 셀렉트(AJAX)-->
<select id="selectGroupMemberListByGroupIdForAJAX" resultType="map">
    SELECT 
        mgm.*,
        mp.user_id as user_id,
        mp.profileNickname as profileNickname,
        mp.profileImg as profileImg,
        mp.profileComment as profileComment,
        mp.isPlusplanUser as inPlusplanUser
    from meeting_groupMember mgm
    inner join meeting_profile mp on mp.profileid = mgm.profileId
    where groupId = #{groupId}
</select>

<!-- * 모집 확정 멤버 선발됨과 동시에 신청자 목록 업데이트-->
<update id="updateApplyUserApplyStatus">
    UPDATE meeting_applyUser 
    SET applyStatus = 'Y'
    where 1=1
    and groupId = #{groupId}
    and profileId = #{profileId}
</update>

<!-- * 모집글PK 기준 해당 모집글 미팅확정멤버 카운팅-->
<select id="countMeetingGroupMemberByGroupId" resultType="int">
    SELECT count(*) from meeting_groupMember mgm 
    where groupId = #{groupId}
</select>

<!-- * 모집글PK 기준 해당 모집글 지원인원 카운팅-->
<select id="countMeetingGroupApplyUserByGroupId" resultType="int">
    SELECT count(*) from meeting_applyUser mau 
    where groupId = #{groupId}
</select>

<!-- * 프로필PK 기준 참여신청내역 셀렉트-->
<select id="selectApplyUserByProfileId" resultType="com.cu.ufuf.dto.MeetingApplyUserDto">
    SELECT * from meeting_applyUser mau 
    where profileId = #{profileId}
</select>

<!-- * 유저PK 기준 유저정보 셀렉트-->
<select id="selectUserInfoByUserId" resultType="com.cu.ufuf.dto.UserInfoDto">
    SELECT * from user_info ui 
    where user_id = #{user_id}
</select>

<!-- * 상품 테이블(item_info) 인서트 쿼리(모집글 생성시 동시에 인서트, 미팅은 아이템카테고리3, 머챈아이디는 그룹아이디)-->
<insert id="insertItemInfo">
    insert into item_info(item_category_id ,merchan_id) values(
        3,
        #{groupId}	
    )
</insert>

<!-- * 그룹PK기준 모집달성현황 업데이트 쿼리-->
<update id="updateGroupApplyStatusByGroupId">
    update meeting_group
    set groupApplyStatus = "Y"
    where groupid = #{groupId}
</update>

<!-- * 모집글PK 기준 공통-상품테이블에서 모집글에 해당하는 상품(미팅회비) 셀렉트-->
<select id="selectItemInfoDtoByGroupId" resultType="com.cu.ufuf.dto.ItemInfoDto">
    SELECT * from item_info ii 
    where 1=1
    and item_category_id = 3
    and merchan_id = #{groupId}
</select>

<!-- * 주문번호테이블에 인서트(미팅방에서 본인 회비 결제 진행시 생성됨)-->
<insert id="insertOrderInfo">
    INSERT INTO order_info(order_id, item_id, user_id) values(
        #{order_id},
        #{item_id},
        #{user_id}
    )
</insert>

<!-- * 주문PK(order_id)로 주문번호DTO 조회-->
<select id="selectOrderInfoByOrderId" resultType="com.cu.ufuf.dto.OrderInfoDto">
    SELECT * from order_info oi 
    where order_id = #{order_id}
</select>

<!-- * 카카오페이 결제요청 인서트-->
<insert id="insertKakaoPaymentReq">
    INSERT into kakao_payment_req(
        cid,
        partner_user_id,
        partner_order_id,
        item_code,
        item_name,
        quantity,
        total_amount,
        tax_free_amount)
    values(
        #{cid},
        #{partner_user_id},
        #{partner_order_id},
        #{item_code},
        #{item_name},
        #{quantity},
        #{total_amount},
        #{tax_free_amount}	
    )
</insert>

<!-- * 카카오페이 결제준비응답 테이블 인서트-->
<insert id="insertKakaoPaymentRes">
    INSERT INTO kakao_payment_res(tid, next_redirect_mobile_url, created_at) values(
        #{tid},
        #{next_redirect_mobile_url},
        #{created_at}
    )
</insert>





</mapper>
